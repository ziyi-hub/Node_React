services:
  authentification:
    container_name: authentification
    image: node:lts
    env_file: authentification/.env
    working_dir: /usr/src/app
    volumes:
      - ./authentification/api:/usr/src/app
    #command: bash -c "npm i && npm start"
    command: npm run watch
    depends_on:
      - commandes_db
    links:
      - commandes_db
    networks:
      - lbs


  commandes:
    container_name: commandes
    image: node:lts
    ports:
      - 3335:3000
    env_file: commandes/.env
    working_dir: /usr/src/app
    volumes:
      - ./commandes/api:/usr/src/app
    #command: bash -c "npm i && npm start"
    command: npm run watch
    depends_on:
      - commandes_db
    links:
      - commandes_db
    networks:
      - lbs


  api_gateway_back:
    container_name: api_gateway_back
    image: node:lts
    env_file: api_gateway_back/.env
    working_dir: /usr/src/app
    volumes:
      - ./api_gateway_back/api:/usr/src/app
    ports:
      - 3333:3000
    #command: bash -c "npm i && npm start"
    command: npm run watch
    depends_on:
      - commandes_db
      - authentification
    links:
      - commandes_db
      - authentification
    networks:
      - lbs


  lbs_adminer:
    container_name: lbs_adminer
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - commandes_db
    networks:
      - lbs


  commandes_db:
    container_name: commandes_db
    image: mariadb:latest
    env_file: commandes_db/.env
    volumes:
      - ./commandes_db/db:/var/lib/mysql
      - ./commandes_db/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./commandes_db/data.sql:/docker-entrypoint-initdb.d/2.sql
    networks:
      - lbs


networks:
  lbs:
    driver: bridge
